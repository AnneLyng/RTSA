out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
if(is.null(out$results$seq_inf$median_unbiased)){
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, NA, NA, NA, NA, NA, NA, NA)
} else {
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
}
out_mat[t,] <- as.vector(unlist(output))
print("Reached the end")
}
}
# simulate data step ------------------------------------------------------
n_sim <- 10
out_mat <- matrix(NA, ncol = 34, nrow = n_sim)
t <- 1
while(t <= n_sim){
if(t == 1){
start <- Sys.time()
}
if(t == n_sim){
print(Sys.time()-start)
}
set.seed(t)
RR_data <- simRR(p0 = pC, RR = mc, tau2 = tau2_analysis, N = trials, n_i = round(NN/2/trials))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
if(is.null(out$results$seq_inf$median_unbiased)){
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, NA, NA, NA, NA, NA, NA, NA)
} else {
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
}
out_mat[t,] <- as.vector(unlist(output))
print("Reached the end")
}
}
# update t
t <- t + 1
}
i <- 3
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
traceback()
library(RTSA)
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
fixed
ana_times
zout
stnd_dv_func <- function(x){
if(zout[[x]]$U[1] == 0){
return(sqrt(zout[[x]]$peF[7]))
} else {
return(sqrt(zout[[x]]$peR[6]))
}
}
stnd_dv <- sapply(ana_times, stnd_dv_func)
stnd_dv
library(RTSA)
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
out
# simulate data step ------------------------------------------------------
n_sim <- 10
out_mat <- matrix(NA, ncol = 34, nrow = n_sim)
t <- 1
while(t <= n_sim){
if(t == 1){
start <- Sys.time()
}
if(t == n_sim){
print(Sys.time()-start)
}
set.seed(t)
RR_data <- simRR(p0 = pC, RR = mc, tau2 = tau2_analysis, N = trials, n_i = round(NN/2/trials))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
if(is.null(out$results$seq_inf$median_unbiased)){
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, NA, NA, NA, NA, NA, NA, NA)
} else {
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
}
out_mat[t,] <- as.vector(unlist(output))
print("Reached the end")
}
}
# update t
t <- t + 1
}
out_mat
tau2_analysis
i
i <- 4
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
traceback()
library(RTSA)
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
zd
zc
zb
za
zc
zd
upci <- uniroot(sw_ciupper,
upper = 20,
lower = 0,
conf_level = conf_level, info = info_ana,
za = za, zb = zb, zc = zc, zd = zd)$root
upci
library(RTSA)
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
# simulate data step ------------------------------------------------------
n_sim <- 10
out_mat <- matrix(NA, ncol = 34, nrow = n_sim)
t <- 1
while(t <= n_sim){
if(t == 1){
start <- Sys.time()
}
if(t == n_sim){
print(Sys.time()-start)
}
set.seed(t)
RR_data <- simRR(p0 = pC, RR = mc, tau2 = tau2_analysis, N = trials, n_i = round(NN/2/trials))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
if(is.null(out$results$seq_inf$median_unbiased)){
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, NA, NA, NA, NA, NA, NA, NA)
} else {
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
}
out_mat[t,] <- as.vector(unlist(output))
print("Reached the end")
}
}
# update t
t <- t + 1
}
traceback()
library(RTSA)
# simulate data step ------------------------------------------------------
n_sim <- 10
out_mat <- matrix(NA, ncol = 34, nrow = n_sim)
t <- 1
while(t <= n_sim){
if(t == 1){
start <- Sys.time()
}
if(t == n_sim){
print(Sys.time()-start)
}
set.seed(t)
RR_data <- simRR(p0 = pC, RR = mc, tau2 = tau2_analysis, N = trials, n_i = round(NN/2/trials))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
if(is.null(out$results$seq_inf$median_unbiased)){
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, NA, NA, NA, NA, NA, NA, NA)
} else {
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
}
out_mat[t,] <- as.vector(unlist(output))
print("Reached the end")
}
}
# update t
t <- t + 1
}
tau2_analysis = 0.05
# simulate data step ------------------------------------------------------
n_sim <- 10
out_mat <- matrix(NA, ncol = 34, nrow = n_sim)
t <- 1
while(t <= n_sim){
if(t == 1){
start <- Sys.time()
}
if(t == n_sim){
print(Sys.time()-start)
}
set.seed(t)
RR_data <- simRR(p0 = pC, RR = mc, tau2 = tau2_analysis, N = trials, n_i = round(NN/2/trials))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
if(is.null(out$results$seq_inf$median_unbiased)){
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, NA, NA, NA, NA, NA, NA, NA)
} else {
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
}
out_mat[t,] <- as.vector(unlist(output))
print("Reached the end")
}
}
# update t
t <- t + 1
}
colnames(out_mat) <- c(colnames(out$results$results_df), "planned_analyses", "outcome", "side",
"futility", "es_alpha", "NN", "median_unbiased", "sw_lower",
"sw_upper", "sw_pvalue", "stop_time", "stop_direction", "stop_sign")
table(is.na(out_mat[,32]))
# simulate data step ------------------------------------------------------
n_sim <- 100
out_mat <- matrix(NA, ncol = 34, nrow = n_sim)
t <- 1
while(t <= n_sim){
if(t == 1){
start <- Sys.time()
}
if(t == n_sim){
print(Sys.time()-start)
}
set.seed(t)
RR_data <- simRR(p0 = pC, RR = mc, tau2 = tau2_analysis, N = trials, n_i = round(NN/2/trials))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
if(is.null(out$results$seq_inf$median_unbiased)){
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, NA, NA, NA, NA, NA, NA, NA)
} else {
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
}
out_mat[t,] <- as.vector(unlist(output))
print("Reached the end")
}
}
# update t
t <- t + 1
}
i
i <- 2
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
i <- 2
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
traceback()
library(RTSA)
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
uniroot(sw_ciupper,
upper = 15,
lower = 0,
conf_level = conf_level, info = info_ana,
za = za, zb = zb, zc = zc, zd = zd)$root
uniroot(sw_ciupper,
upper = 20,
lower = 0,
conf_level = conf_level, info = info_ana,
za = za, zb = zb, zc = zc, zd = zd)$root
library(RTSA)
# simulate data step ------------------------------------------------------
n_sim <- 100
out_mat <- matrix(NA, ncol = 34, nrow = n_sim)
t <- 1
while(t <= n_sim){
if(t == 1){
start <- Sys.time()
}
if(t == n_sim){
print(Sys.time()-start)
}
set.seed(t)
RR_data <- simRR(p0 = pC, RR = mc, tau2 = tau2_analysis, N = trials, n_i = round(NN/2/trials))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
if(is.null(out$results$seq_inf$median_unbiased)){
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, NA, NA, NA, NA, NA, NA, NA)
} else {
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
}
out_mat[t,] <- as.vector(unlist(output))
print("Reached the end")
}
}
# update t
t <- t + 1
}
library(RTSA)
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
# simulate data step ------------------------------------------------------
n_sim <- 100
out_mat <- matrix(NA, ncol = 34, nrow = n_sim)
t <- 1
while(t <= n_sim){
if(t == 1){
start <- Sys.time()
}
if(t == n_sim){
print(Sys.time()-start)
}
set.seed(t)
RR_data <- simRR(p0 = pC, RR = mc, tau2 = tau2_analysis, N = trials, n_i = round(NN/2/trials))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = fixed_analysis, pC = pC, design = design_rtsa,
futility = futility, outcome = outcome)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
if(is.null(out$results$seq_inf$median_unbiased)){
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, NA, NA, NA, NA, NA, NA, NA)
} else {
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
}
out_mat[t,] <- as.vector(unlist(output))
print("Reached the end")
}
}
# update t
t <- t + 1
}
