RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
t <- 1
t <- t + 1
set.seed(t) # 8
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
t <- 1
t <- t + 1
set.seed(t) # 8
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
t <- 1
t <- t + 1
set.seed(t) # 8
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
t <- 1
t <- t + 1
set.seed(t) # 8
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
t <- 1
t <- t + 1
set.seed(t) # 8
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
t <- 1
t <- t + 1
set.seed(t) # 8
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
t <- 1
t <- t + 1
set.seed(t) # 8
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
t <- 1
t <- t + 1
set.seed(t) # 8
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
t <- 1
t <- t + 1
set.seed(t) # 8
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
t <- 1
t <- t + 1
set.seed(t) # 8
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
t <- 1
t <- t + 1
set.seed(t) # 8
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
t <- 1
t <- t + 1
set.seed(t) # 8
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
t
# simulate data step ------------------------------------------------------
t <- 1
set.seed(t) # 8
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- c(out$results$results_df)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
print("reached the end")
}
}
out
out$results$results_df
output <- out$results$results_df[which(out$results$results_df$z_fixed = max(!is.na(out$results$results_df$z_fixed))]
out$results$results_df[which(out$results$results_df$z_fixed == max(!is.na(out$results$results_df$z_fixed)))]
which(out$results$results_df$z_fixed == max(!is.na(out$results$results_df$z_fixed)))
which(out$results$results_df$z_fixed == max(out$results$results_df$z_fixed, na.rm = T))
max(!is.na(out$results$results_df$z_fixed))
which(!is.na(out$results$results_df$z_fixed))
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed)))]
output
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output
RR
design_rtsa$settings
NN
out$results$seq_inf$median_unbiased
# simulate data step ------------------------------------------------------
t <- 1
set.seed(t)
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
print("reached the end")
}
}
output
unlist(output)
as.vector(output)
as.vector(unlist(output))
out_mat <- matrix(NA, ncol = 34)
out_mat[t,] <- as.vector(unlist(output))
# simulate data step ------------------------------------------------------
n_sim <- 10
out_mat <- matrix(NA, ncol = 34)
t <- 1
while(t < n_sim){
set.seed(t)
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("reached the end")
}
}
# update t
t <- t + 1
}
set.seed(t)
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("reached the end")
}
}
output
out_mat[t,] <- as.vector(unlist(output))
out_mat <- matrix(NA, ncol = 34, nrow = n_sim)
# simulate data step ------------------------------------------------------
n_sim <- 10
out_mat <- matrix(NA, ncol = 34, nrow = n_sim)
t <- 1
while(t < n_sim){
set.seed(t)
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("reached the end")
}
}
# update t
t <- t + 1
}
out_mat
as.vector(unlist(output))
out$results$seq_inf$median_unbiased
out$results$seq_inf$stop_sign
out$results$seq_inf$stop_time
# simulate data step ------------------------------------------------------
n_sim <- 10
out_mat <- matrix(NA, ncol = 34, nrow = n_sim)
t <- 1
while(t < n_sim){
set.seed(t)
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
if(is.null(out$results$seq_inf$median_unbiased)){
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, NA, NA, NA, NA, NA, NA, NA)
} else {
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
}
out_mat[t,] <- as.vector(unlist(output))
print("Reached the end")
}
}
# update t
t <- t + 1
}
# simulate data step ------------------------------------------------------
n_sim <- 10
out_mat <- matrix(NA, ncol = 34, nrow = n_sim)
t <- 1
while(t <= n_sim){
set.seed(t)
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
if(is.null(out$results$seq_inf$median_unbiased)){
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, NA, NA, NA, NA, NA, NA, NA)
} else {
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
}
out_mat[t,] <- as.vector(unlist(output))
print("Reached the end")
}
}
# update t
t <- t + 1
}
out_mat
colnames(out$results$results_df)
colnames(out_mat) <- c(colnames(out$results$results_df), "planned_analyses", "outcome", "side",
"futility", "es_alpha", "es_beta", "NN", "median_unbiased", "sw_lower",
"sw_upper", "sw_pvalue", "stop_time", "stop_direction", "stop_sign")
length(c(colnames(out$results$results_df), "planned_analyses", "outcome", "side",
"futility", "es_alpha", "es_beta", "NN", "median_unbiased", "sw_lower",
"sw_upper", "sw_pvalue", "stop_time", "stop_direction", "stop_sign"))
design_rtsa$settings$es_beta
colnames(out_mat) <- c(colnames(out$results$results_df), "planned_analyses", "outcome", "side",
"futility", "es_alpha", "NN", "median_unbiased", "sw_lower",
"sw_upper", "sw_pvalue", "stop_time", "stop_direction", "stop_sign")
# simulate data step ------------------------------------------------------
n_sim <- 100
out_mat <- matrix(NA, ncol = 34, nrow = n_sim)
t <- 1
while(t <= n_sim){
set.seed(t)
RR_data <- simRR(p0 = 0.1, RR = 0.8, tau2 = 0, N = 5, n_i = round(NN/2/5))
for(i in 1:dim(RR_data)[1]){
out <- simTSA(data = RR_data[1:i,], fixed = T, pC = 0.1, design = design_rtsa)
if(!is.null(out$results$seq_inf$median_unbiased) & i != dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
out_mat[t,] <- as.vector(unlist(output))
print("Stopped early")
break
}
if(i == dim(RR_data)[1]){
output <- out$results$results_df[max(which(!is.na(out$results$results_df$z_fixed))),]
if(is.null(out$results$seq_inf$median_unbiased)){
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, NA, NA, NA, NA, NA, NA, NA)
} else {
output <- c(output, length(design_rtsa$settings$timing), design_rtsa$settings$outcome,
design_rtsa$settings$side, design_rtsa$settings$futility, design_rtsa$settings$es_alpha,
design_rtsa$settings$es_beta, NN, out$results$seq_inf$median_unbiased,
out$results$seq_inf$lower, out$results$seq_inf$upper, out$results$seq_inf$p.value,
out$results$seq_inf$stop_time, out$results$seq_inf$stop_direction,
out$results$seq_inf$stop_sign)
}
out_mat[t,] <- as.vector(unlist(output))
print("Reached the end")
}
}
# update t
t <- t + 1
}
colnames(out_mat) <- c(colnames(out$results$results_df), "planned_analyses", "outcome", "side",
"futility", "es_alpha", "NN", "median_unbiased", "sw_lower",
"sw_upper", "sw_pvalue", "stop_time", "stop_direction", "stop_sign")
table(is.na(out_mat$stop_time))
out_mat$stop_time
out_ma
out_mat
table(is.na(out_mat[,32]))
