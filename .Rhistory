ln_RR = rnorm(K, mean = log(RR), sd = sqrt(tau2))
pI = exp(log(p0) + ln_RR / 2)
pI[pI < 0.01] = 0.01
pI[pI > 0.99] = 0.99
pC = exp(log(p0) - ln_RR / 2)
pC[pC < 0.01] = 0.01
pC[pC > 0.99] = 0.99
outmat = matrix(NA, ncol = 4, nrow = K)
zvalues = NULL
for (i in 1:K) {
eA <- apply(cbind(n / 2, pI[i]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
eB <- apply(cbind(n / 2, pC[i]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
outmat[i, 1:4] = c(eA, n / 2, eB, n / 2)
}
synout = metaPrepare(
outcome = "RR",
eI = outmat[, 1],
nI = outmat[, 2],
eC = outmat[, 3],
nC = outmat[, 2],
method = "MH"
)
out1 = synthesize(synout, hakn = FALSE)
#out2 = synthesize(synout, hakn = TRUE)
# save the tau^2, I^2 and D^2
hetero = c(out1$U[c(1, 3, 4)])
RISd2 = 1 / (1 - hetero[3]) * nFix
outhetero[h,] = c(hetero, RISi2, RISd2)
ln_RR = rnorm(m, mean = log(RR), sd = sqrt(tau2))
pI = exp(log(p0) + ln_RR / 2)
pI[pI < 0.01] = 0.01
pI[pI > 0.99] = 0.99
pC = exp(log(p0) - ln_RR / 2)
pC[pC < 0.01] = 0.01
pC[pC > 0.99] = 0.99
for (b in 1:m) {
eA <- apply(cbind(ceiling(dRISd2 / 2 / m), pI[b]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
eB <- apply(cbind(ceiling(dRISd2 / 2 / m), pC[b]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
outmat = rbind(outmat, c(eA, dRISd2 / 2 / m, eB, dRISd2 / 2 / m))
}
synout = metaPrepare(
outcome = "RR",
eI = outmat[, 1],
nI = outmat[, 2],
eC = outmat[, 3],
nC = outmat[, 2],
method = "MH"
)
out1 = synthesize(synout, hakn = FALSE)
out2 = synthesize(synout, hakn = TRUE)
outpvalue[h, c(1, 2, 3)] = c(round(out1$peF[5], 4), round(out1$peR[5], 4), out2$peR[5])
}
outm[m,] = c(
sum(outpvalue[, 1] < 0.05) / nsim,
sum(outpvalue[, 2] < 0.05) / nsim,
sum(outpvalue[, 3] < 0.05) / nsim,
mean(outhetero[,3])
)
}
outm
# simulate 10 trials
tau2 = 0.05
outl = matrix(NA, ncol = 3, nrow = 10)
outm = matrix(NA, ncol = 4, nrow = 10)
nFix = ceiling(4*(qnorm(1-0.05/2)+qnorm(1-0.2))^2*(p0*(1-p0))/theta^2)
RR <- 0.9
p0 <- 0.1
pI <- round(exp(log(p0) + log(RR) / 2), 4)
pC <- round(exp(log(p0) - log(RR) / 2), 4)
theta = round(pC - pI, 4)
n = 2500
K = 10
nsim = 1000
for(m in 1:10) {
outpvalue = matrix(NA, ncol = 3, nrow = nsim)
outhetero = matrix(NA, ncol = 5, nrow = nsim)
for (h in 1:nsim) {
ln_RR = rnorm(K, mean = log(RR), sd = sqrt(tau2))
pI = exp(log(p0) + ln_RR / 2)
pI[pI < 0.01] = 0.01
pI[pI > 0.99] = 0.99
pC = exp(log(p0) - ln_RR / 2)
pC[pC < 0.01] = 0.01
pC[pC > 0.99] = 0.99
outmat = matrix(NA, ncol = 4, nrow = K)
zvalues = NULL
for (i in 1:K) {
eA <- apply(cbind(n / 2, pI[i]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
eB <- apply(cbind(n / 2, pC[i]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
outmat[i, 1:4] = c(eA, n / 2, eB, n / 2)
}
synout = metaPrepare(
outcome = "RR",
eI = outmat[, 1],
nI = outmat[, 2],
eC = outmat[, 3],
nC = outmat[, 2],
method = "MH"
)
out1 = synthesize(synout, hakn = FALSE)
#out2 = synthesize(synout, hakn = TRUE)
# save the tau^2, I^2 and D^2
hetero = c(out1$U[c(1, 3, 4)])
RISd2 = 1 / (1 - hetero[3]) * nFix
outhetero[h,] = c(hetero, RISi2, RISd2)
ln_RR = rnorm(m, mean = log(RR), sd = sqrt(tau2))
pI = exp(log(p0) + ln_RR / 2)
pI[pI < 0.01] = 0.01
pI[pI > 0.99] = 0.99
pC = exp(log(p0) - ln_RR / 2)
pC[pC < 0.01] = 0.01
pC[pC > 0.99] = 0.99
for (b in 1:m) {
eA <- apply(cbind(ceiling(dRISd2 / 2 / m), pI[b]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
eB <- apply(cbind(ceiling(dRISd2 / 2 / m), pC[b]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
outmat = rbind(outmat, c(eA, dRISd2 / 2 / m, eB, dRISd2 / 2 / m))
}
synout = metaPrepare(
outcome = "RR",
eI = outmat[, 1],
nI = outmat[, 2],
eC = outmat[, 3],
nC = outmat[, 2],
method = "MH"
)
out1 = synthesize(synout, hakn = FALSE)
out2 = synthesize(synout, hakn = TRUE)
outpvalue[h, c(1, 2, 3)] = c(round(out1$peF[5], 4), round(out1$peR[5], 4), out2$peR[5])
}
outm[m,] = c(
sum(outpvalue[, 1] < 0.05) / nsim,
sum(outpvalue[, 2] < 0.05) / nsim,
sum(outpvalue[, 3] < 0.05) / nsim,
mean(outhetero[,5])
)
}
outm = cbind(1:10, outm)
outm
colnames(outl) = c(
"Number of trials",
"Fixed-effect",
"Random-effects DL",
"Random-effects HKSJ",
"Avg. RIS"
)
colnames(outm) = c(
"Number of trials",
"Fixed-effect",
"Random-effects DL",
"Random-effects HKSJ",
"Avg. RIS"
)
rownames(outl) = rep(c(""), 10)
rownames(outm) = rep(c(""), 10)
outm
save(outm, file = "vignettes/random-effects-TSA.Rda")
library(RTSA)
library(grid)
library(tiff)
load("random-effects-TSA.Rda")
knitr::kable(outm, caption = "Power per model as a function of number of extra trials and RIS based on Diversity")
# simulate 10 trials
tau2 = 0.05
outl = matrix(NA, ncol = 3, nrow = 10)
outm = matrix(NA, ncol = 5, nrow = 10)
nFix = ceiling(4*(qnorm(1-0.05/2)+qnorm(1-0.2))^2*(p0*(1-p0))/theta^2)
RR <- 0.9
p0 <- 0.1
pI <- round(exp(log(p0) + log(RR) / 2), 4)
pC <- round(exp(log(p0) - log(RR) / 2), 4)
theta = round(pC - pI, 4)
n = 2500
K = 10
nsim = 1000
for(m in 1:10) {
outpvalue = matrix(NA, ncol = 3, nrow = nsim)
outhetero = matrix(NA, ncol = 5, nrow = nsim)
for (h in 1:nsim) {
ln_RR = rnorm(K, mean = log(RR), sd = sqrt(tau2))
pI = exp(log(p0) + ln_RR / 2)
pI[pI < 0.01] = 0.01
pI[pI > 0.99] = 0.99
pC = exp(log(p0) - ln_RR / 2)
pC[pC < 0.01] = 0.01
pC[pC > 0.99] = 0.99
outmat = matrix(NA, ncol = 4, nrow = K)
zvalues = NULL
for (i in 1:K) {
eA <- apply(cbind(n / 2, pI[i]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
eB <- apply(cbind(n / 2, pC[i]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
outmat[i, 1:4] = c(eA, n / 2, eB, n / 2)
}
synout = metaPrepare(
outcome = "RR",
eI = outmat[, 1],
nI = outmat[, 2],
eC = outmat[, 3],
nC = outmat[, 2],
method = "MH"
)
out1 = synthesize(synout, hakn = FALSE)
#out2 = synthesize(synout, hakn = TRUE)
# save the tau^2, I^2 and D^2
hetero = c(out1$U[c(1, 3, 4)])
RISd2 = 1 / (1 - hetero[3]) * nFix
outhetero[h,] = c(hetero, RISi2, RISd2)
ln_RR = rnorm(m, mean = log(RR), sd = sqrt(tau2))
pI = exp(log(p0) + ln_RR / 2)
pI[pI < 0.01] = 0.01
pI[pI > 0.99] = 0.99
pC = exp(log(p0) - ln_RR / 2)
pC[pC < 0.01] = 0.01
pC[pC > 0.99] = 0.99
for (b in 1:m) {
eA <- apply(cbind(ceiling(dRISd2 / 2 / m), pI[b]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
eB <- apply(cbind(ceiling(dRISd2 / 2 / m), pC[b]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
outmat = rbind(outmat, c(eA, dRISd2 / 2 / m, eB, dRISd2 / 2 / m))
}
synout = metaPrepare(
outcome = "RR",
eI = outmat[, 1],
nI = outmat[, 2],
eC = outmat[, 3],
nC = outmat[, 2],
method = "MH"
)
out1 = synthesize(synout, hakn = FALSE)
out2 = synthesize(synout, hakn = TRUE)
outpvalue[h, c(1, 2, 3)] = c(round(out1$peF[5], 4), round(out1$peR[5], 4), out2$peR[5])
}
outm[m,] = c(
sum(outpvalue[, 1] < 0.05) / nsim,
sum(outpvalue[, 2] < 0.05) / nsim,
sum(outpvalue[, 3] < 0.05) / nsim,
mean(outhetero[,5]),
mean(outhetero[,3])
)
}
outm
library(devtools)
document()
library(RTSA)
library(RTSA)
library(bookdown)
log.RR = log(0.9); log.p0 = log(0.1)
pI = exp(log.p0+log.RR/2)
pC = exp(log.p0-log.RR/2)
nRandom(alpha = 0.05, beta = 0.2, pI = pI, pC = pC, diversity = 0.7)
log.RR = log(0.9); log.p0 = log(0.1)
pI = exp(log.p0+log.RR/2)
pC = exp(log.p0-log.RR/2)
nRandom(alpha = 0.05, beta = 0.2, pI = pI, pC = pC, diversity = 0.75)
log.RR = log(0.9); log.p0 = log(0.1)
pI = exp(log.p0+log.RR/2)
pC = exp(log.p0-log.RR/2)
nRandom(alpha = 0.05, beta = 0.2, pI = pI, pC = pC, diversity = 0.77)
# simulate 10 trials
tau2 = 0.05
outl = matrix(NA, ncol = 3, nrow = 10)
outm = matrix(NA, ncol = 5, nrow = 10)
nFix = ceiling(4*(qnorm(1-0.05/2)+qnorm(1-0.2))^2*(p0*(1-p0))/theta^2)
RR <- 0.9
p0 <- 0.1
pI <- round(exp(log(p0) + log(RR) / 2), 4)
pC <- round(exp(log(p0) - log(RR) / 2), 4)
theta = round(pC - pI, 4)
n = 2500
K = 10
nsim = 1000
for(m in 1:10) {
outpvalue = matrix(NA, ncol = 3, nrow = nsim)
outhetero = matrix(NA, ncol = 5, nrow = nsim)
for (h in 1:nsim) {
ln_RR = rnorm(K, mean = log(RR), sd = sqrt(tau2))
pI = exp(log(p0) + ln_RR / 2)
pI[pI < 0.01] = 0.01
pI[pI > 0.99] = 0.99
pC = exp(log(p0) - ln_RR / 2)
pC[pC < 0.01] = 0.01
pC[pC > 0.99] = 0.99
outmat = matrix(NA, ncol = 4, nrow = K)
zvalues = NULL
for (i in 1:K) {
eA <- apply(cbind(n / 2, pI[i]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
eB <- apply(cbind(n / 2, pC[i]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
outmat[i, 1:4] = c(eA, n / 2, eB, n / 2)
}
synout = metaPrepare(
outcome = "RR",
eI = outmat[, 1],
nI = outmat[, 2],
eC = outmat[, 3],
nC = outmat[, 2],
method = "MH"
)
out1 = synthesize(synout, hakn = FALSE)
#out2 = synthesize(synout, hakn = TRUE)
# save the tau^2, I^2 and D^2
hetero = c(out1$U[c(1, 3, 4)])
RISd2 = 1 / (1 - hetero[3]) * nFix
outhetero[h,] = c(hetero, RISi2, RISd2)
ln_RR = rnorm(m, mean = log(RR), sd = sqrt(tau2))
pI = exp(log(p0) + ln_RR / 2)
pI[pI < 0.01] = 0.01
pI[pI > 0.99] = 0.99
pC = exp(log(p0) - ln_RR / 2)
pC[pC < 0.01] = 0.01
pC[pC > 0.99] = 0.99
for (b in 1:m) {
eA <- apply(cbind(ceiling(dRISd2 / 2 / m), pI[b]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
eB <- apply(cbind(ceiling(dRISd2 / 2 / m), pC[b]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
outmat = rbind(outmat, c(eA, dRISd2 / 2 / m, eB, dRISd2 / 2 / m))
}
synout = metaPrepare(
outcome = "RR",
eI = outmat[, 1],
nI = outmat[, 2],
eC = outmat[, 3],
nC = outmat[, 2],
method = "MH"
)
out1 = synthesize(synout, hakn = FALSE)
out2 = synthesize(synout, hakn = TRUE)
outpvalue[h, c(1, 2, 3)] = c(round(out1$peF[5], 4), round(out1$peR[5], 4), out2$peR[5])
}
outm[m,] = c(
sum(outpvalue[, 1] < 0.05) / nsim,
sum(outpvalue[, 2] < 0.05) / nsim,
sum(outpvalue[, 3] < 0.05) / nsim,
mean(outhetero[,5])
)
#    mean(outhetero[,3])
#)
}
# simulate 10 trials
tau2 = 0.05
outl = matrix(NA, ncol = 3, nrow = 10)
outm = matrix(NA, ncol = 4, nrow = 10)
nFix = ceiling(4*(qnorm(1-0.05/2)+qnorm(1-0.2))^2*(p0*(1-p0))/theta^2)
RR <- 0.9
p0 <- 0.1
pI <- round(exp(log(p0) + log(RR) / 2), 4)
pC <- round(exp(log(p0) - log(RR) / 2), 4)
theta = round(pC - pI, 4)
n = 2500
K = 10
nsim = 1000
for(m in 1:10) {
outpvalue = matrix(NA, ncol = 3, nrow = nsim)
outhetero = matrix(NA, ncol = 5, nrow = nsim)
for (h in 1:nsim) {
ln_RR = rnorm(K, mean = log(RR), sd = sqrt(tau2))
pI = exp(log(p0) + ln_RR / 2)
pI[pI < 0.01] = 0.01
pI[pI > 0.99] = 0.99
pC = exp(log(p0) - ln_RR / 2)
pC[pC < 0.01] = 0.01
pC[pC > 0.99] = 0.99
outmat = matrix(NA, ncol = 4, nrow = K)
zvalues = NULL
for (i in 1:K) {
eA <- apply(cbind(n / 2, pI[i]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
eB <- apply(cbind(n / 2, pC[i]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
outmat[i, 1:4] = c(eA, n / 2, eB, n / 2)
}
synout = metaPrepare(
outcome = "RR",
eI = outmat[, 1],
nI = outmat[, 2],
eC = outmat[, 3],
nC = outmat[, 2],
method = "MH"
)
out1 = synthesize(synout, hakn = FALSE)
#out2 = synthesize(synout, hakn = TRUE)
# save the tau^2, I^2 and D^2
hetero = c(out1$U[c(1, 3, 4)])
RISd2 = 1 / (1 - hetero[3]) * nFix
outhetero[h,] = c(hetero, RISi2, RISd2)
ln_RR = rnorm(m, mean = log(RR), sd = sqrt(tau2))
pI = exp(log(p0) + ln_RR / 2)
pI[pI < 0.01] = 0.01
pI[pI > 0.99] = 0.99
pC = exp(log(p0) - ln_RR / 2)
pC[pC < 0.01] = 0.01
pC[pC > 0.99] = 0.99
for (b in 1:m) {
eA <- apply(cbind(ceiling(dRISd2 / 2 / m), pI[b]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
eB <- apply(cbind(ceiling(dRISd2 / 2 / m), pC[b]), 1,
function(x)
rbinom(1, size = x[1], prob = x[2]))
outmat = rbind(outmat, c(eA, dRISd2 / 2 / m, eB, dRISd2 / 2 / m))
}
synout = metaPrepare(
outcome = "RR",
eI = outmat[, 1],
nI = outmat[, 2],
eC = outmat[, 3],
nC = outmat[, 2],
method = "MH"
)
out1 = synthesize(synout, hakn = FALSE)
out2 = synthesize(synout, hakn = TRUE)
outpvalue[h, c(1, 2, 3)] = c(round(out1$peF[5], 4), round(out1$peR[5], 4), out2$peR[5])
}
outm[m,] = c(
sum(outpvalue[, 1] < 0.05) / nsim,
sum(outpvalue[, 2] < 0.05) / nsim,
sum(outpvalue[, 3] < 0.05) / nsim,
mean(outhetero[,5])
)
#    mean(outhetero[,3])
#)
}
outm = cbind(1:10, outm)
colnames(outm) = c(
"Number of extra trials",
"Fixed-effect",
"Random-effects DL",
"Random-effects HKSJ",
"Avg. RIS"
)
rownames(outm) = rep(c(""), 10)
save(outm, file = "vignettes/random-effects-TSA.Rda")
outm
library(RTSA)
library(gsDesign)
data("perioOxy")
data("perioOxy")
summary(perioOxy)
data("perioOxy")
head(perioOxy)
library(metafor)
mp = metaPrepare(outcome == "RR", eI = perioOxy$eI, nI = perioOxy$nI,
eC = perioOxy$eC, nC = perioOxy$nC, method = "MH")
mp = metaPrepare(outcome = "RR", eI = perioOxy$eI, nI = perioOxy$nI,
eC = perioOxy$eC, nC = perioOxy$nC, method = "MH")
mp = metaPrepare(outcome = "RR", eI = perioOxy$eI, nI = perioOxy$nI,
eC = perioOxy$eC, nC = perioOxy$nC, method = "MH")
mp
synthesize(mp,hakn = TRUE)
?metaPrepare
?synthesize
dat <- escalc(measure="RR", n1i=nI, n2i=nC, ai=eI, ci=eC, data=perioOxy)
dat
View(dat)
dat
dat <- escalc(measure="RR", n1i=nI, n2i=nC, ai=eI, ci=eC, data=perioOxy)
print(dat)
?ecals
?escalc
dat <- escalc(measure="RR", n1i=nI, n2i=nC, ai=eI, ci=eC, data=perioOxy)
dat
dat
exp(dat$yi)
rma(yi, vi, data = dat, method = "RE")
rma(yi, vi, data = dat, method = "DL")
rma(yi, vi, data = dat, method = "DL", test = "knha")
synthesize(mp,hakn = FALSE)
synthesize(mp)
rma(yi, vi, data = dat, method = "DL")
out.mt = rma(yi, vi, data = dat, method = "DL")
out.mt$b
out.mt = rma(yi, vi, data = dat, method = "DL")
exp(out.mt$b)
out.mt = rma(yi, vi, data = dat, method = "DL")
out.mt
exp(out.mt$b)
0.1643^2
out.mt = rma(yi, vi, data = dat, method = "DL")
out.mt
exp(out.mt$b)
sqrt(0.0269)
sqrt(0.0270)
